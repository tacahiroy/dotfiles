# By Daniel Thau.  Public domain.
# my tmux configuration based on Daniel Thau's vim-keys.conf
#
# Maintainer: Tacahiroy

set -g default-shell /bin/bash
set -g default-terminal xterm-256color

unbind-key C-b
set -g prefix C-k
set -g prefix2 C-s

bind c new-window -c '#{pane_current_path}'
bind s split-window -v -c '#{pane_current_path}'
bind v split-window -h -c '#{pane_current_path}'
bind C new-window -c '$HOME'
bind S split-window -v -c '$HOME'
bind V split-window -h -c '$HOME'

# resize panes like vim
# feel free to change the "1" to however many lines you want to resize by, only
# one at a time can be slow
bind -r < resize-pane -L 3
bind -r > resize-pane -R 3
bind -r - resize-pane -D 3
bind -r + resize-pane -U 3

bind z resize-pane -Z

bind -n M-p display-panes
bind -n M-s choose-session
bind -n M-w choose-window
bind -n M-o command-prompt "new-window -n %1 'ssh %1'"
bind -n M-C-f resize-pane -Z  # maximise the current pane
bind -n M-k copy-mode

# pane navigation
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

bind -n M-h select-pane -L
bind -n M-n select-pane -D
bind -n M-e select-pane -U
bind -n M-i select-pane -R
bind -n M-= next-layout

# window navigation
bind -n M-l previous-window
bind -n M-y next-window
# focus to the former window
bind -n M-u select-window -l

bind -n M-- switch-client -l
bind -n M-= new-window
bind -n M-\\ confirm-before -p "kill-pane #P? (y/n)" kill-pane
bind -n M-r next-layout

bind : command-prompt
bind / command-prompt "split-window 'exec man %%'"
bind J command-prompt "join-pane -t %1"
bind N command-prompt "new-session -d -s %1"
bind % command-prompt "swap-window -t %1"
bind o command-prompt "new-window -n %1 'ssh %1'"

# logging
bind > pipe-pane 'cat >> ~/.tmux/logs/#W-#I#P.log' \; display 'Start logging - ~/.tmux/logs/#W-#I#P.log'
bind < pipe-pane \; display 'finished logging - ~/.tmux/logs/#W-#I#P.log'

# buffers
bind B list-buffers

# walk around panes
bind ^k select-pane -t :.+
bind -n M-[ select-pane -t :.+
bind @ setw synchronize-panes \; display 'synchronised: #{pane_synchronized}'
bind W choose-session

bind -n M-- switch-client -l
bind -n M-= new-window
bind -n M-\\ confirm-before -p "kill-pane #P? (y/n)" kill-pane

# change window
bind g select-window -l
bind -n M-l previous-window
bind -n M-y next-window
bind -n M-u select-window -l

bind R source-file ~/.tmux.conf \; display 'Sourced tmux config'

unbind m

# Vim-style copy/paste
# github.com/tangledhelix
  unbind [
  bind y copy-mode
  unbind p
  bind p paste-buffer

  bind -T copy-mode-vi v send -X begin-selection
  bind -T copy-mode-vi y send -X copy-selection-and-cancel
  bind -T copy-mode-vi a send -X append-selection
  bind -T copy-mode-vi C-g send -X clear-selection
  bind -T copy-mode-vi Escape send -X cancel

# Makes Insert to Normal mode quickly in Vim
  set -s escape-time 2

# set -g terminal-overrides ',xterm-256color:Tc:smcup@:rmcup@,*:U8=0'
  set -ga terminal-overrides ',xterm-256color:Tc:smcup@:rmcup@,*:U8=0'

  set -g history-limit 10240
  set -g history-file ~/.tmux_history
  set -g base-index 1
  set -g pane-base-index 1

# # enables tmux's buffers and system clipboard separately
  set -s set-clipboard on

# setw -g xterm-keys on

# vi-style controls for copy mode
  setw -g mode-keys vi
  setw -g status-keys emacs

  setw -g allow-rename on
  setw -g automatic-rename on

# mouse
  setw -g mouse on

  bind -T root WheelUpPane if-shell -F -t = '#{alternate_on}' 'send-keys -M' 'select-pane -t =; copy-mode -e; send-keys -M'

# window mode
  setw -g mode-style fg=black,bg=colour220

  set -g focus-events on

  set -g allow-passthrough on


# message
  setw -g message-style bg=colour220,fg=colour18


# pane divider
  set -g pane-border-style fg=white
  set -g pane-active-border-style fg=green

# windows
  set -g window-style fg=colour247,bg=default
  set -g window-active-style fg=colour52,bg=default,dim

# # status
  set -g status on
  set -g status-position top
  set -g status-interval 15
  set -g status-justify left

# # highlight of the current window
#   setw -g window-status-current-style fg=colour18,bg=colour221

# # status bar
#   set -g status-style fg=colour18,bg=colour159

#   set -g status-left-style fg=colour0,bg=colour159
#   set -g status-left-length 30
#   set -g status-left '#{tmux_mode_indicator}'

#   set -g status-right-style fg=colour0,bg=colour159
#   set -g status-right-length 90
#   set -g status-right '[#S]#(date +%H:%M)'

# # if something happened
  setw -g monitor-activity on
  setw -g activity-action other

# highlight for current window
  setw -g window-status-current-style fg=colour18,bg=colour221

# status bar
  set -g status-style fg=colour18,bg=colour159

  set -g status-left-style fg=colour0,bg=colour159
  set -g status-left-length 30
  set -g status-left '#{tmux_mode_indicator}'

  set -g status-right-style fg=colour7,bg=colour159
  set -g status-right-length 90
  set -g status-right 'ðŸ’»#S@#HâŒš#(date +%H:%M)'

  setw -g set-titles on
  setw -g aggressive-resize on

##
# tmux plugins

  set -g @plugin 'tmux-plugins/tpm'
  set -g @plugin 'tmux-plugins/tmux-resurrect'
  set -g @resurrect-capture-pane-contents 'on'
  set -g @resurrect-strategy-vim 'session'

  set -g @plugin 'tmux-plugins/tmux-continuum'
  set -g @continuum-restore 'on'

set -g @plugin 'MunifTanjim/tmux-mode-indicator'
  set -g @mode_indicator_prefix_mode_style 'bg=brightgreen,fg=black'
  set -g @mode_indicator_copy_mode_style 'bg=brightyellow,fg=black'
  set -g @mode_indicator_sync_mode_style 'bg=brightmagenta,fg=black'
  set -g @mode_indicator_empty_mode_style 'bg=brightblue,fg=black'

set -g @plugin 'dracula/tmux'
  set -g @dracula-plugins "cpu-usage ram-usage time"
  set -g @dracula-show-powerline true
  set -g @dracula-show-flags true
  # the default is 5, it can accept any number
  set -g @dracula-refresh-rate 5
  # it can accept `session`, `smiley`, `window`, or any character.
  set -g @dracula-show-left-icon "session"
  set -g @dracula-border-contrast true
  set -g @dracula-cpu-usage-colors "pink dark_gray"

run '~/.tmux/plugins/tpm/tpm'

source-file -q ~/.tmux.conf.local

run-shell ~/.tmux/plugins/tmux-resurrect/resurrect.tmux
